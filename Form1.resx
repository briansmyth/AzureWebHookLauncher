<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QC+RXhpZgAATU0AKgAAAAgAAwE7AAIAAAAMAAAAModpAAQAAAAB
        AAAAPpydAAEAAAAYAAAAngAAAABCcmlhbiBTbXl0aAAABJADAAIAAAAUAAAAdJAEAAIAAAAUAAAAiJKR
        AAIAAAADMDcAAJKSAAIAAAADMDcAAAAAAAAyMDE2OjA1OjIzIDE1OjE1OjA0ADIwMTY6MDU6MjMgMTU6
        MTU6MDQAAABCAHIAaQBhAG4AIABTAG0AeQB0AGgAAAD/2wBDAAcFBQYFBAcGBQYIBwcIChELCgkJChUP
        EAwRGBUaGRgVGBcbHichGx0lHRcYIi4iJSgpKywrGiAvMy8qMicqKyr/2wBDAQcICAoJChQLCxQqHBgc
        KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKir/wAARCAA0AMwD
        ASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
        AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6
        Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKz
        tLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEB
        AQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEI
        FEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hp
        anN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX
        2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6RooooAQmuc1rxppukTtaiRZ7pfvIrYVP
        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
        BRRRQB//2Q==
</value>
  </data>
</root>